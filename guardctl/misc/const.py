from poodle import Object
from guardctl.model.object.k8s_classes import StatusServ, StatusNode, StatusPod, StatusLim, StatusSched, StatusReq, State, Type

STATE_NODE_ACTIVE = State()
STATE_NODE_INACTIVE = State()
STATE_POD_ACTIVE = State()
STATE_POD_INACTIVE = State()
STATE_POD_PENDING = State()
STATE_POD_RUNNING = State()
STATE_POD_SUCCEEDED = State()
STATE_REQ_STARTED = State()
STATE_REQUEST_ACTIVE = State()
STATE_REQUEST_INACTIVE = State()
self.stringFactory.get("Limits_met") = StatusLim()
self.stringFactory.get("Limits_exceeded") = StatusLim()
STATUS_NODE_ACTIVE = StatusNode()
STATUS_NODE_DELETED = StatusNode()
STATUS_NODE_INACTIVE = StatusNode()
STATUS_NODE_RUNNING = StatusNode()
STATUS_NODE_SUCCEDED = StatusNode()
STATUS_POD_FAILED = StatusPod()
STATUS_POD_KILLING = StatusPod()
STATUS_POD_PENDING = StatusPod()
self.stringFactory.get("Running") = StatusPod()
# STATUS_POD_SUCCEEDED = StatusPod() # MAY BE LOST BE CAREFUL
# STATUS_POD_TERMINATED = StatusPod()
STATUS_POD_TOBETERMINATED = StatusPod()
STATUS_REQ_ATKUBEPROXY = StatusReq()
STATUS_REQ_ATLOADBALANCER = StatusReq()
STATUS_REQ_ATPODINPUT = StatusReq()
STATUS_REQ_ATSTART = StatusReq()
STATUS_REQ_CPURESOURCECONSUMED = StatusReq()
STATUS_REQ_CPURESOURCERELEASED = StatusReq()
STATUS_REQ_DIRECTEDTONODE = StatusReq()
STATUS_REQ_DIRECTEDTOPOD = StatusReq()
STATUS_REQ_MEMRESOURCECONSUMED = StatusReq()
STATUS_REQ_MEMRESOURCERELEASED = StatusReq()
STATUS_REQ_NODECAPACITYOVERWHELMED = StatusReq()
STATUS_REQ_REQUESTFINISHED = StatusReq()
STATUS_REQ_REQUESTPIDTOBEENDED = StatusReq()
STATUS_REQ_REQUESTTERMINATED = StatusReq()
STATUS_REQ_RESOURCESCONSUMED = StatusReq()
STATUS_REQ_RESOURCESRELEASED = StatusReq()
STATUS_REQ_RUNNING = StatusReq()
self.stringFactory.get("Changed") = StatusSched()
self.stringFactory.get("Clean") = StatusSched()
STATUS_SERV_INTERRUPTED = StatusServ()
STATUS_SERV_PENDING = StatusServ()
self.stringFactory.get("Started") = StatusServ()




TYPE_PERSISTENT = Type()
# ["typeTemporary","typePersistent","Null","notNull","Issue01","PreemptLowerPriority","Never"]